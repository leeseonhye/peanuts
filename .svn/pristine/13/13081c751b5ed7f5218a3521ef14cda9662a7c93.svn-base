<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.hta.peanuts.dao.UserDao">
	<insert id="addUser" parameterType="User">
		insert into planner_user (user_id, user_pwd, user_name, user_status, user_email, user_tel, user_profile, create_date)
		 values ( '${id}', '${pwd}', '${name}', 'IN', '${email}', '${tel}', '${profile}', sysdate)
	</insert>
	
	<select id="getUserDetail" parameterType="string" resultType="User">
		select 	
			user_id id,
			user_pwd pwd,
			user_name name,
			user_status status,
			user_email email,
			user_tel tel,
			user_profile profile,
			create_date createDate
		from 
			planner_user
		where 
			user_id = #{value}
	</select>
	
	<!-- 사용자 사진 변경 -->
	<update id="imgModify" parameterType="User">
		update planner_user
		set user_profile = #{profile}
		where user_id = #{id}
	</update>
	
	<select id="getMessages" parameterType="Message" resultType="Message">
		select
			user_id			as userId
		,	msg_contents	as contents
		,	create_date		as createDate
		,	msg_key			as msgKey
		,	msg_mark		as mark
		from
			message
		where
			msg_receiver = #{receiver}
		<if test="criteria != null">
			<if test="criteria == 'all'">
				and msg_status in ('Y', 'N')
			</if>	
			<if test="criteria == 'mark'">
				and msg_mark = 'Y'
			</if>
			<if test="criteria == 'mark'">
				and msg_status in ('Y', 'N')
			</if>
			<if test="criteria == 'unread'">
				and msg_status = 'N'
			</if>
			<if test="criteria == 'read'">
				and msg_status = 'Y'
			</if>
		</if>
		order by
			create_date desc		
	</select>
	
	<select id="getSentMessages" parameterType="string" resultType="Message">
		select
			user_id			as userId
		,	msg_contents	as contents
		,	msg_receiver	as receiver
		,	msg_status		as status
		,	create_date		as createDate
		,	msg_read		as readDate
		,	msg_key			as msgKey
		from
			message
		where
			user_id = #{value} 
		and
			msg_status in ('Y', 'N')
		order by
			create_date desc	
	</select>
	
		<select id="getDelMessages" parameterType="string" resultType="Message">
		select
			user_id			as userId
		,	msg_contents	as contents
		,	msg_del			as delDate
		,	create_date		as createDate		
		,	msg_key			as msgKey
		from
			message
		where
			msg_receiver = #{value}
		and
			msg_status = 'D'
		and
			msg_del >= add_months(sysdate, -1)
		order by
			msg_del desc		
	</select>
	
	<select id="getMessageDetail" parameterType="int" resultType="Message">
		select
			user_id 		as userId
		,	msg_contents 	as contents
		,	msg_receiver	as receiver
		,	create_date		as createDate
		,	msg_mark		as mark
		from
			message
		where	
			msg_key = #{value}		
	</select>
	
	<update id="delMessages" parameterType="int">
		update message
		set
			msg_status = 'D',
			msg_del = sysdate
		where
			msg_key = #{value}
	</update>
	
	<update id="markMessage" parameterType="map">
		update message
		<set>
			<if test="mark != null">
				<if test="mark == 'Y'">
					msg_mark = 'N'
				</if>			
				<if test="mark == 'N'">
					msg_mark = 'Y'
				</if>			
			</if>
		</set>
		where
			msg_key = #{value}	
	</update>
	
	<delete id="cancelSendMessage" parameterType="int">
		delete from message
		where msg_key = #{value}
	</delete>
	
	<update id="recoveryMessage" parameterType="int">
		update message
		set
			msg_status = 'Y'
		where
			msg_key = #{key}
	</update>
	
	<insert id="sendMessages">
		insert into message
			(user_id, msg_contents, msg_receiver, msg_key)
		values
			(#{userId}, #{contents}, #{receiver}, message_seq.nextval)
	</insert>
	
</mapper>