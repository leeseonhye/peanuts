package kr.co.hta.peanuts.web.controllers;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import kr.co.hta.peanuts.annotation.LoginUser;
import kr.co.hta.peanuts.service.OrderService;
import kr.co.hta.peanuts.service.QnaService;
import kr.co.hta.peanuts.service.ReviewService;
import kr.co.hta.peanuts.service.TicketService;
import kr.co.hta.peanuts.vo.Qna;
import kr.co.hta.peanuts.vo.Review;
import kr.co.hta.peanuts.vo.Ticket;
import kr.co.hta.peanuts.vo.User;

@Controller
@RequestMapping("/ticket")
public class TicketController {
	
	@Value("${review.photo.saved.directory}")
	private String path;
	
	@Autowired
	private TicketService ticketService;
	@Autowired
	private ReviewService reviewService;
	@Autowired
	private QnaService qnaService;
	@Autowired
	private OrderService orderService;

	@RequestMapping("/main.do")
	public String main(Model model) {
		List<Ticket> tickets = ticketService.getTicketList();
		model.addAttribute("tickets", tickets);
		
		return "ticket/main.jsp";
	}
	
	@RequestMapping("/form2.do")
	public String form2() {
		return "ticket/form2.jsp";
	}
	
	@RequestMapping("/detail.do")
	public String detail(@RequestParam int ticketNo, Model model) {
		
		HashMap<String, Object> ticket = ticketService.detail(ticketNo);
		HashMap<String, Object> review = reviewService.detail(ticketNo);
		List<Qna> qnas = qnaService.getAllQna(ticketNo);
		
		model.addAttribute("ticket", ticket);
		model.addAttribute("review", review);
		model.addAttribute("qnas", qnas);
		
		return "ticket/detail.jsp";
	}
	
	@RequestMapping("/addReview.do")
	public String addReview( @RequestParam("images") MultipartFile images, @RequestParam("contents") String contents, @RequestParam("grade") int grade, @RequestParam("ticketNo") int ticketNo, Model model, @LoginUser User user) throws IOException {
		MultipartFile upfile = images;
		if(!images.isEmpty()) {
			String originalFileName = images.getOriginalFilename();			
			FileCopyUtils.copy(upfile.getBytes(), new File(path,originalFileName));
			
			HashMap<String, Object> reviewImage = new HashMap<>();
			reviewImage.put("ticketNo", ticketNo);
			reviewImage.put("userId", "hong");
			reviewImage.put("imagesName", images.getOriginalFilename());
			
			reviewService.addReviewImage(reviewImage);
		}
		
		Review review = new Review();
		review.setTicketNo(ticketNo);
		review.setTicketGrade(grade);
		review.setUserId(user.getId());
		review.setReviewContents(contents);
		
		
		reviewService.addReview(review);
		
		return "redirect:/ticket/detail.do?ticketNo="+ticketNo;
	}
	@RequestMapping("/addQna.do")
	public String addQna(@RequestParam String questionContents, int ticketNo, @LoginUser User user) {
		
		Qna qna = new Qna();
		qna.setUser(user);
		qna.setQuestionContents(questionContents);
		qna.setTicketNo(ticketNo);
		
		qnaService.addQna(qna);
		
		return  "redirect:/ticket/detail.do?ticketNo="+ ticketNo;
	}
	
	@RequestMapping("/addQnaAnswer.do")
	public String qnaAnswer(@RequestParam String answerContents, int qnaNo, int ticketNo) {
		
		Qna qna = new Qna();
		qna.setAnswerContents(answerContents);
		qna.setQnaNo(qnaNo);
		qna.setTicketNo(ticketNo);
		qnaService.addQnaAnswer(qna);
		
		return  "redirect:/ticket/detail.do?ticketNo="+ qna.getTicketNo();
	}
	
	@RequestMapping("/ticketOrder.do")
	public String order(@RequestParam int ticketQty, @RequestParam int ticketNo, @LoginUser User user) {
			HashMap<String, Object> order = new HashMap<>();
			order.put("ticketNo", ticketNo);
			order.put("ticketQty", ticketQty);
			order.put("user", user);
			//orderService.addOrder(order);
		return "redirect:/ticket/detail.do?ticketNo=" + ticketNo;
	}
}
