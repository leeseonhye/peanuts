<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.hta.peanuts.dao.TogetherDao">

	<select id="getTopBoards" resultType="Board">
		select
			B.board_no			as "no"
		,	B.user_id			as userId
		,	B.board_category	as category
		,	B.board_title		as title
		,	B.board_contents	as "contents"
		,	B.board_view		as "view"
		,	B.create_date		as createDate
		,	B.board_status		as status
		,	nvl(L.cnt, 0)		as likes
		from
			board B, (select no, count(*) as cnt
					  from likes
					  where likes_category = 'TOGETHER'
					  group by no) L
		where B.board_no in (select board_no
							from (select board_no, board_view, row_number() over (order by board_view desc) as rn
					              from board
								  where board_category = 'TOGETHER'
								  and create_date >= sysdate - 7
								  and create_date &lt;= sysdate
								  and board_status = 'E')
								where rn &lt;= 3)
		and B.board_no = L.no(+)		
	</select>

	<select id="getTogetherBoards" parameterType="map"  resultType="Board">
		select
			B.board_no			as "no"
		,	B.user_id			as "userId"
		,	B.board_category	as "category"
		,	B.board_title		as "title"
		,	B.board_contents	as "contents"
		,	B.board_view		as "view"
		,	B.create_date		as "createDate"
		,	B.board_status		as "status"
		,	nvl(L.cnt, 0)		as "likes"
		from
			board B, (select no, count(*) as cnt
			     	  from likes 
					  where likes_category = 'TOGETHER'
					  group by no) L
		where
			B.board_category = 'TOGETHER'
		and
			B.board_status = 'E'
		and
			B.board_no = L.no(+)
		<if test="all != null">

		</if>
		<if test="writer != null">
			and B.user_id like '%' || #{writer} || '%'
		</if>
		<if test="title != null">
			and B.board_title like '%' || #{title} || '%'
		</if>
		<if test="contents != null">
			and B.board_contents like '%' || #{contents} || '%'
		</if>
		<if test="board != null">
			and (B.board_title like '%' || #{board} || '%'
				 or B.board_contents like '%' || #{board} || '%')
		</if>
		order by
			B.create_date desc
	</select>
	
	<select id="getTogetherTopJoin" resultType="Board">
		select 
			B.board_no			as "no"
		,	B.user_id			as userId
		,	B.board_title		as title
		,	B.board_contents	as "contents"
		,	B.create_date		as createDate
		,	nvl(T.cnt, 0)		as together
		,	U.user_profile		as "profile"		
		from
			board B,
			planner_user U,
			(select board_no, count(*) as cnt, row_number() over (order by count(*) desc) as rn
			 from together
			 group by board_no) T
		where
			B.board_no = T.board_no(+)
		and
			B.user_id = U.user_id			
		and
			B.board_category = 'TOGETHER'
		and
			B.board_status = 'E'
		and
			B.create_date >= add_months(sysdate, -3)
		and
			B.create_date &lt;= sysdate	
		and
			T.rn &lt;= 5
		order
			by T.rn asc		
	</select>
	
	<select id="getTogetherTopLikes" resultType="Board">
		select 
			B.board_no			as "no"
		,	B.user_id			as userId
		,	B.board_title		as title
		,	B.board_contents	as "contents"
		,	B.create_date		as createDate
		,	nvl(L.cnt, 0)		as likes
		,	U.user_profile		as "profile"
		from
			board B,
			planner_user U,
			(select no, count(*) as cnt, row_number() over (order by count(*) desc) as rn
			 from likes
			 where likes_category = 'TOGETHER'
			 group by no) L
		where
			B.board_no = L.no(+)
		and
			B.user_id = U.user_id
		and
			B.board_category = 'TOGETHER'
		and
			B.board_status = 'E'
		and
			B.create_date >= add_months(sysdate, -3)
		and
			B.create_date &lt;= sysdate	
		and
			L.rn &lt;= 5
		order
			by L.rn asc	
	</select>	
	
	<select id="getBoardWithLikes" parameterType="int" resultType="Board">
		select 
			B.board_no			as "no"
		,	B.user_id			as userId
		,	B.board_title		as title
		,	B.board_contents	as "contents"
		,	B.create_date		as createDate
		,	nvl(L.cnt, 0)		as likes
		from
			board B,
			(select no, count(*) as cnt
			 from likes
			 where likes_category = 'TOGETHER'
			 group by no) L
		where
			B.board_no = L.no(+)
		and
			B.board_category = 'TOGETHER'
		and
			B.board_no = #{value}	
	</select>
	

</mapper>